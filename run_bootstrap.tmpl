#!/bin/bash

set -euo pipefail
{{- if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt update
{{- end }}
{{- end }}

# Ensure GNU tools on Mac OS.
{{- if eq .chezmoi.os "darwin" }}
# https://apple.stackexchange.com/a/284381
if ! brew list gnu-tar; then
    # https://gist.github.com/skyzyx/3438280b18e4f7c490db8a2a2ca0b9da
	brew install autoconf bash binutils coreutils diffutils ed findutils flex gawk \
    gnu-indent gnu-sed gnu-tar gnu-which gpatch grep gzip less m4 make \
    watch wdiff wget zip

	BREW_BIN="/usr/local/bin/brew"
	if [ -f "/opt/homebrew/bin/brew" ]; then
		BREW_BIN="/opt/homebrew/bin/brew"
	fi

	if type "${BREW_BIN}" &> /dev/null; then
		export BREW_PREFIX="$("${BREW_BIN}" --prefix)"
		for bindir in "${BREW_PREFIX}/opt/"*"/libexec/gnubin"; do export PATH=$bindir:$PATH; done
		for bindir in "${BREW_PREFIX}/opt/"*"/bin"; do export PATH=$bindir:$PATH; done
		for mandir in "${BREW_PREFIX}/opt/"*"/libexec/gnuman"; do export MANPATH=$mandir:$MANPATH; done
		for mandir in "${BREW_PREFIX}/opt/"*"/share/man/man1"; do export MANPATH=$mandir:$MANPATH; done
	fi
fi
{{- end }}

# Ensure neovim.
if ! command -v nvim >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install neovim
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install neovim
{{- end }}
{{- end }}
fi

# Ensure vim-plug.
if [ ! -f ~/.local/share/nvim/site/autoload/plug.vim ]; then
    curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

# Ensure fzf.
if ! command -v fzf >/dev/null; then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install
fi

# Ensure bat.
if ! command -v bat >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install bat
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install bat
    bat_symlink_dest="/usr/local/bin/bat"
    sudo rm $bat_symlink_dest
    sudo ln -s $(which batcat) $bat_symlink_dest
{{- end }}
{{- end }}
fi

# Ensure exa.
if ! command -v exa >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install exa
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install exa
{{- end }}
{{- end }}
fi

# Ensure delta.
if ! command -v delta >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install git-delta
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
	curl -sJLO https://github.com/dandavison/delta/releases/download/0.13.0/git-delta_0.13.0_amd64.deb
	dpkg -i git-delta_0.13.0_amd64.deb
{{- end }}
{{- end }}
fi

# Ensure fd.
if ! command -v fd >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install fd
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install fd-find
    fd_symlink_dest="/usr/local/bin/fd"
    sudo rm $fd_symlink_dest
    sudo ln -s $(which fdfind) $fd_symlink_dest
{{- end }}
{{- end }}
fi

# Ensure tmux.
if ! command -v tmux >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install tmux
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install tmux
{{- end }}
{{- end }}
fi

# Ensure motivate.
if ! command -v motivate >/dev/null; then
    git clone https://github.com/mubaris/motivate.git "${HOME}/dev/motivate"
	cd "${HOME}/dev/motivate/motivate"
	sudo ./install.sh
	cd -
fi

# Ensure docker.
if ! command -v docker >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install --cask docker
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install -y docker-ce docker-ce-cli containerd.io
{{- end }}
{{- end }}
fi

# Ensure go.
if ! command -v go >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install go
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install golang-go
{{- end }}
{{- end }}
fi

# Ensure timer app (Mac OS).
{{- if eq .chezmoi.os "darwin" }}
if [ ! -d /Applications/Timer.app ]; then
	brew install --cask michaelvillar-timer
fi
{{- end }}


# Ensure Visual Studio Code.
{{- if eq .chezmoi.os "darwin" }}
if [ ! -d "/Applications/Visual Studio Code.app" ]; then
	brew install --cask visual-studio-code
fi
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
	sudo apt install code
{{- end }}
{{- end }}

# Ensure tree.
if ! command -v tree >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install tree
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install tree
{{- end }}
{{- end }}
fi

# Ensure wireshark.
if ! command -v wireshark >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install --cask wireshark
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install wireshark
{{- end }}
{{- end }}
fi

# Ensure jq.
if ! command -v jq >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install jq
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install jq
{{- end }}
{{- end }}
fi

# Ensure jqp.
if ! command -v jqp >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install jqp
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install jqp
{{- end }}
{{- end }}
fi

# Ensure yq.
if ! command -v yq >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install yq
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install yq
{{- end }}
{{- end }}
fi

# Ensure jid.
if ! command -v jid >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install jid
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install jid
{{- end }}
{{- end }}
fi

# Ensure shellcheck.
if ! command -v shellcheck >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install shellcheck
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install shellcheck
{{- end }}
{{- end }}
fi

# Ensure Java.
if ! command -v java >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    # Specifically need Java 11 for UniFi Controller:
	# https://community.ui.com/questions/unifi-is-damaged-and-cant-be-opened-7-3-76-Mac/21a158b5-6854-4d2e-8fe2-f944d02fdb48
	# Should be fine for all other things since it's an LTS release.
    brew install openjdk@11
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install default-jdk
{{- end }}
{{- end }}
fi

# Ensure ipcalc.
if ! command -v ipcalc >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install ipcalc
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install ipcalc
{{- end }}
{{- end }}
fi

# Ensure fswatch.
if ! command -v fswatch >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install fswatch
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install fswatch
{{- end }}
{{- end }}
fi

# Ensure dive.
if ! command -v dive >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install dive
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
	wget https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.deb
	sudo apt install ./dive_0.9.2_linux_amd64.deb
{{- end }}
{{- end }}
fi

# Ensure Rust.
if ! command -v cargo >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install cargo
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
	sudo apt install -y rust
{{- end }}
{{- end }}
fi

# Ensure jc.
if ! command -v jc >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install jc
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
	sudo apt install -y jc
{{- end }}
{{- end }}
fi

# Ensure iperf.
if ! command -v iperf >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install iperf3
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
	sudo apt install -y iperf
{{- end }}
{{- end }}
fi

# Ensure iproute2mac on Mac OS.
if ! command -v ip >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install iproute2mac
{{- end }}
fi

# Ensure Rectangle on Mac OS.
if [ ! -d /Applications/Rectangle.app ]; then
{{- if eq .chezmoi.os "darwin" }}
    brew install --cask rectangle
{{- end }}
fi

# Ensure tldr.
if ! command -v tldr >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install isacikgoz/taps/tldr
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
	go install github.com/isacikgoz/tldr/cmd/tldr@latest
{{- end }}
{{- end }}
fi
