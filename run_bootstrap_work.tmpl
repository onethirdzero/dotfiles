{{- if not (eq .workDotfilesRepoPath "") -}}
#!/bin/bash

set -euo pipefail

WORK_DOTFILES_DEST="${HOME}/dotfiles"

if [[ ! -d $WORK_DOTFILES_DEST ]]; then
  git clone {{ .workDotfilesRepoPath }} $WORK_DOTFILES_DEST
fi

cat $WORK_DOTFILES_DEST/.zshrc >> ~/.zshrc
cat $WORK_DOTFILES_DEST/.gitconfig >> ~/.gitconfig
if [[ ! -d ~/.pip ]]; then
  mkdir -p ~/.pip
fi
cat $WORK_DOTFILES_DEST/.pip/pip.conf >> ~/.pip/pip.conf

{{- if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt update
{{- end }}
{{- end }}

# Ensure kubectl.
if ! command -v kubectl >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install kubectl
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install -y kubectl
{{- end }}
{{- end }}
fi

# Ensure kubectx.
if ! command -v kubectx >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install kubectx
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
	sudo apt install -y kubectx
{{- end }}
{{- end }}
fi

# Ensure kustomize.
if ! command -v kustomize >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install kustomize
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install -y kustomize
{{- end }}
{{- end }}
fi

# Ensure plantuml.
if ! command -v plantuml >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install graphviz
    brew install plantuml
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install plantuml -y
{{- end }}
{{- end }}
fi

# Ensure jfrog.
if ! command -v jfrog >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install jfrog-cli
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install jfrog-cli -y
{{- end }}
{{- end }}
fi

# Ensure kind.
if ! command -v kind >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install kind
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    sudo apt install kind -y
{{- end }}
{{- end }}
fi

# Ensure stern.
if ! command -v stern >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
	brew tap demonware/tap https://github.ihs.demonware.net/Demonware/homebrew-tap.git
    brew install stern
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    # TODO
{{- end }}
{{- end }}
fi

# Ensure gpg.
if ! command -v gpg >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install gnupg
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    apt install -y gpg
{{- end }}
{{- end }}
fi

# Ensure vault.
if ! command -v vault >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
	brew tap hashicorp/tap
    brew install hashicorp/tap/vault
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
	wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg >/dev/null
	gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
	echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
    apt update && apt install -y vault
{{- end }}
{{- end }}
fi

# Ensure ansible.
if ! command -v ansible >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install ansible
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
    apt install -y ansible
{{- end }}
{{- end }}
fi

# Ensure K8s stern:
# https://github.com/stern/stern
if ! command -v stern >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install stern
{{- else if (hasKey .chezmoi.osRelease "name") }}
{{- if (eq .chezmoi.osRelease.name "Ubuntu") }}
	go install github.com/stern/stern@latest
{{- end }}
{{- end }}
fi

# Stop GlobalProtect from auto starting on login and auto starting after quitting.
# https://richddean.com/post/147155656349/stopautostartglobalprotectvpn#comment-5945202871
launchctl disable gui/$(id -u)/com.paloaltonetworks.gp.pangpa
launchctl disable gui/$(id -u)/com.paloaltonetworks.gp.pangps
launchctl print-disabled gui/$(id -u)/

# Ensure CMake.
if ! command -v cmake >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install cmake
    brew install cmake-docs
{{- end }}
fi

# Ensure Postman.
if [ ! -d /Applications/Postman.app ]; then
{{- if eq .chezmoi.os "darwin" }}
    brew install --cask postman
{{- end }}
fi

if ! command -v gcloud >/dev/null; then
{{- if eq .chezmoi.os "darwin" }}
    brew install --cask google-cloud-sdk
{{- end }}
fi

# Ensure Microsoft Remote Desktop.
# The App Store download requires adding a credit card to the work Apple ID.
if [ ! -d "/Applications/Microsoft Remote Desktop.app" ]; then
{{- if eq .chezmoi.os "darwin" }}
    brew install --cask microsoft-remote-desktop
{{- end }}
fi

{{- end }}

# Ensure Background Music for Mac OS.
if [ ! -d '/Applications/Background Music.app' ]; then
{{- if eq .chezmoi.os "darwin" }}
    brew install --cask background-music
{{- end }}
fi

# Ensure Tailscale for Mac OS.
if [ ! -d /Applications/Tailscale.app ]; then
{{- if eq .chezmoi.os "darwin" }}
    brew install --cask tailscale
{{- end }}
fi

# Ensure One Monokai theme for Xcode.
if [ ! -f ~/Library/Developer/Xcode/UserData/FontAndColorThemes/OneMonokai.xccolortheme ]; then
	/bin/bash <(curl -s https://raw.githubusercontent.com/cpea2506/Xcode-OneMonokai/main/OneMonokai/install.sh)
fi
