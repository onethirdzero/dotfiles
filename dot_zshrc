# Load zgen.
source "${HOME}/.zgen/zgen.zsh"

# If the init script doesn't exist.
if ! zgen saved; then
  # Specify plugins and themes here.
  zgen load romkatv/powerlevel10k powerlevel10k 
  zgen load zsh-users/zsh-autosuggestions
  zgen load zsh-users/zsh-syntax-highlighting
  zgen load zsh-users/zsh-history-substring-search

  # Generate the init script from plugins above
  zgen save
fi

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH

# Make Rust binaries discoverable.
export PATH=$HOME/.cargo/bin:$PATH

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
	zsh-autosuggestions # Suggestions from partial input. Like fish shell.
	zsh-syntax-highlighting
	zsh-history-substring-search
)

# This behaviour seems to exist out-of-the-box elsewhere, but not on
# M1 MacBook Pros with Alacritty 0.10.1 and Monterey 12.2.1.
# https://github.com/zsh-users/zsh-history-substring-search#usage
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# This is required to stop "Alt + Left" and "Alt + Right" from misbehaving
# in a chezmoi-started shell.
# Seems to only happen on an M1 MacBook Pro with Alacritty 0.10.1 and Monterey 12.2.1.
bindkey "^[b" backward-word
bindkey "^[f" forward-word

# This is required for "Alt + ." behaviour to work properly on M1 MacBook Pros
# with Alacritty 0.10.1 and Monterey 12.2.1.
bindkey "^[." insert-last-word

# This is required for "Alt + Backspace" behaviour to work properly on M1 MacBook Pros
# with Alacritty 0.10.1 and Monterey 12.2.1.
bindkey "^[^?" backward-delete-word

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# Preferred editor for local and remote sessions
export EDITOR='nvim'

# HISTFILE seems to already be set by some ZSH plugin.
export SAVEHIST=1000000000 # How many records are saved to file. 
export HISTSIZE=1000000000 # How many records are loaded into memory. Should be at least $SAVEHIST.

# Add commands to history immediately, so we can share it between shell sessions.
# https://zsh.sourceforge.io/Doc/Release/Options.html#index-SHARE_005fHISTORY
setopt share_history

# Add timestamp to command history.
# https://zsh.sourceforge.io/Doc/Release/Options.html#index-EXTENDED_005fHISTORY
export HISTTIMEFORMAT="[%F %T] "
setopt extended_history

# More history configuration.
# Taken from the ohmyzsh plugin: https://github.com/ohmyzsh/ohmyzsh/blob/28ed2880c766eb5a360354fb71d597dbc07abaa0/lib/history.zsh#L36-L39
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it

alias g="git"
alias cz="chezmoi"
alias vim="nvim"
alias less="bat"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Load fzf config.
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Handy alias from @jdavidson for automating the fixup and rebase workflow.
# Requires autostash=true.
function gitfixr() {
	git commit --fixup=$1 && git rebase -i --autosquash $1^
}
alias fixr="gitfixr"

# Integrate atuin with fzf.
# https://github.com/atuinsh/atuin/issues/68#issuecomment-1567410629
CUR_SHELL=zsh
atuin-setup() {
	if ! which atuin &> /dev/null; then return 1; fi
	bindkey '^E' _atuin_search_widget

	export ATUIN_NOBIND="true"
	eval "$(atuin init "$CUR_SHELL")"
	fzf-atuin-history-widget() {
		local selected num
		setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2>/dev/null

		local atuin_opts="--cmd-only --limit ${ATUIN_LIMIT:-5000}"
		local fzf_opts=(
			--height=${FZF_TMUX_HEIGHT:-40%}
			--tac
			"-n2..,.."
			--tiebreak=index
			"--query=${LBUFFER}"
			"+m"
			"--bind=ctrl-d:reload(atuin search $atuin_opts -c $PWD),ctrl-r:reload(atuin search $atuin_opts)"
		)

		selected=$(
			eval "atuin search ${atuin_opts}" |
				fzf "${fzf_opts[@]}"
		)
		local ret=$?
		if [ -n "$selected" ]; then
			# the += lets it insert at current pos instead of replacing
			LBUFFER+="${selected}"
		fi
		zle reset-prompt
		return $ret
	}
	zle -N fzf-atuin-history-widget
	bindkey '^R' fzf-atuin-history-widget
}
atuin-setup

